## UNIVERSIDAD TECNICA DEL NORTE 
## FICA - CIERCOM
## AUTOR: CHANDI BRAYAN
## TESIS PREGRADO 
## 2022

## RED DE TRATAMIENTO DE DATOS  

[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true

##########################################################
#            FORMATO DE RESULTADOS DE SALIDA             #
##########################################################
num-rngs = 3
repeat = 15
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
**.routingRecorder.enabled = false
**.scalar-recording = false
**.vector-recording = false
**.sctp.**.scalar-recording = false  # eliminar estadisticas molestas de SCTP
**.sctp.**.vector-recording = false  # eliminar estadisticas molestas de SCTP

##########################################################
#            PARAMETROS DE SIMULACION                    #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 38s
warmup-period = 10s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


############### CONFIGURACION IPV4 #######################
*.configurator.config = xmldoc("./demo.xml")


##########################################################
#              PARAMETROS ESPECIFICOS NR y LTE           #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reportes CQI (channel quality information) cada 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  
**.ueTxPower = 26
**.eNodeBTxPower = 40

############### CONFIGURACION SCTP #######################
**.sctp.nagleEnabled = false         # si se coloca true, la transmision de paquetes pequepnos se retrasara en la interfaz X2
**.sctp.enableHeartbeats = false

# ----------------------------------------------------------------------------- #

[Config MEC_Conectividad-Dual]
network = ibarra_mec5g_v2x.simulations.red5G_NSA.red5G_NSA
sim-time-limit=20s
description = "Configuracion base para convergencia de red"

## El eNodeB debe instanciar la capa NR PDCP (New Radio Packet Data Convergence Protocol) para explotar 
## la conectividad dual, mientras que el gNodeB incluye la capa NR PDCP por defecto
*.eNodeB1.nicType = "LteNicEnbD2D"
*.eNOdeB1.cellularNic.LtePdcpRrcType = "NRPdcpRrcEnb"
*.gNodeB1.masterId = 1
**.dualConnectivityEnabled = true

## CONFIGURACION X2
*.*B1.numX2Apps = 1    # una x2App por cada par de nodos emparejados
*.*B1.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Puertos de servidor (x2App[0]=5000, x2App[1]=5001, ...)
*.eNodeB1.x2App[0].client.connectAddress = "gNodeB1%x2ppp0" 
*.gNodeB1.x2App[0].client.connectAddress = "eNodeB1%x2ppp0" 

#########################################################
# CARRIER AGRAGATION Y CONFIGURACION DE MODELO DE CANAL # 
#########################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands =  25 #${numero de bandas=25}

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      MOVILIDAD                         #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

*.ue[*].mobility.initFromDisplayString = false
*.ue[*].mobility.typename = "LinearMobility"
*.ue[*].mobility.updateInterval = 0.05s

*.gNodeB1.mobility.initFromDisplayString = true

**.numUes = 2
**.ue[0].mobility.initialX = 650m
**.ue[0].mobility.initialY = 250m
**.ue[0].mobility.initialMovementHeading = 90deg
**.ue[0].mobility.speed = 10mps

**.ue[1].mobility.initialX = 650m
**.ue[1].mobility.initialY = 300m
**.ue[1].mobility.initialMovementHeading = 90deg
**.ue[1].mobility.speed = 10mps

**.ue[*].masterId = 0    
**.ue[*].macCellId = 0   
**.ue[*].nrMasterId = 1
**.ue[*].nrMacCellId = 1
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

# CONFIGURACIONES tcp
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # Bytes, corresponde con la capacidad máxima del búfer del receptor (Normalmente, las colas de NIC deben tener al menos este tamaño)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Reconocimiento selectivo (RFC 2018, 2883, 3517) support (opcion de encabezado) (SACK estará habilitado para una conexión si ambos extremos lo admiten)

**.hasRNISupport = true
##########################################################
#                    CAPA APLICACION                     #
##########################################################

#########################_AUTOMOVIL_#######################

#------------UE ALERTA DE APP---------------
*.ue[*].numApps = 2
*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/WarningAlertApp.json"

*.ue[*].app[1].typename = "UEWarningAlertApp"
*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime = 1s										#al enviar la aplicación de alerta de advertencia de inicio								#period to sending messages
*.ue[*].app[1].stopTime = 30s										#al enviar la aplicación de alerta de advertencia de parada MEC

#----------------------------------------

###################### MEC HOST #####################
# Recursos disponibles
*.mecHost.maxMECApps = 100												#max MEC Apps a instanciar
*.mecHost.maxRam = 32GB													#max KBytes de RAM 
*.mecHost.maxDisk = 100TB												#max KBytes de Disco
*.mecHost.maxCpuSpeed = 400000											#max porcentaje de CPU
#----------------------------------------

*.gNodeB*.mecHost = "mecHost"
*.mecHost.bsList = "gNodeB1"
*.mecHost.mecPlatformManager.mecOrchestrator = "mecOrchestrator"


#------- SERVICIOS ETSI MEC ---------------

*.mecHost.mecPlatform.numMecServices = 1
*.mecHost.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost.mecPlatform.mecService[0].localAddress = "mecHost.virtualisationInfrastructure"
*.mecHost.mecPlatform.mecService[0].localPort = 10020

*.mecHost.mecPlatform.mecService[0].rng-0 = 0 # Solicitar hora de servicio
*.mecHost.mecPlatform.mecService[0].rng-1 = 1 # Tiempo de servicio de suscripcion
*.mecHost.mecPlatform.mecService[0].requestServiceTime = 100us
*.mecHost.mecPlatform.mecService[0].subscriptionServiceTime = 11us

*.mecHost.mecPlatform.serviceRegistry.localAddress = "mecHost.virtualisationInfrastructure"
*.mecHost.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost.mecPlatform.serviceRegistry.rng-0 = 0 # Solicitar hora de servicio
*.mecHost.mecPlatform.serviceRegistry.rng-1 = 1 # Tiempo de servicio de suscripcion

#------- ORQUESTADOR MEC ---------------
**.mecOrchestrator.mecHostList = "mecHost"


# ----------------------------------------------------------------------------- #

# Aplicacion MEC en primer plano y generador de solicitudes para crear contienda en los servicios MEC
[Config App-MEC_1-Generador-Solicitudes]
extends = MEC_Conectividad-Dual
*.mecHost.mecPlatform.mecService[0].**.vector-recording = true
*.mecHost.mecPlatform.mecService[0].**.scalar-recording = true

**.numBGMecApp = 2
*.mecHost.bgApp[0].typename = "MecRequestBackgroundGeneratorApp"
*.mecHost.bgApp[0].numberOfApplications = ${numApp = 0, 200, 400, 600, 800, 1000, 2000}
*.mecHost.bgApp[0].mp1Address= "mecHost.virtualisationInfrastructure"
*.mecHost.bgApp[0].mp1Port = 10021

*.mecHost.bgApp[1].typename = "MecRequestForegroundApp"
*.mecHost.bgApp[1].mp1Address= "mecHost.virtualisationInfrastructure"
*.mecHost.bgApp[1].mp1Port = 10021

output-scalar-file = ${resultdir}/${configname}/${configname}_${numApp}.sca
output-vector-file = ${resultdir}/${configname}/${configname}_${numApp}.vec


# ----------------------------------------------------------------------------- #

# Aplicacion MEC en primer plano y N aplicaciones en segundo plano para crear contienda en los servicios MEC
[Config App-MEC_N-Apps]
extends = MEC_Conectividad-Dual
*.mecHost.mecPlatform.mecService[0].**.vector-recording = true
*.mecHost.mecPlatform.mecService[0].**.scalar-recording = true

#**.numBGMecApp = 1 + ${numApp = 1, 10, 100, 200, 400, 600, 800, 1000, 2000}
**.numBGMecApp = 1 + ${numApp = 10, 100, 200, 300, 400}
*.mecHost.bgApp[0].typename = "MecRequestForegroundApp"
*.mecHost.bgApp[0].mp1Address= "mecHost.virtualisationInfrastructure"
*.mecHost.bgApp[0].mp1Port = 10021
*.mecHost.bgApp[0].lambda = 42ms


*.mecHost.bgApp[1..].typename = "MecRequestBackgroundApp"
*.mecHost.bgApp[1..].mp1Address= "mecHost.virtualisationInfrastructure"
*.mecHost.bgApp[1..].mp1Port = 10020 # MecRequestBackgroundApp se conecta directamente al servicio
*.mecHost.bgApp[1..].lambda = 42ms